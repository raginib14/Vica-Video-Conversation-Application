C:\Program Files\nodejs\

socket io, nodeJS, peer js, egs, uuid library, express server, WebRTC

REACT for frontend and NodeJS for backend

npm init
npm install express - that is how we'll build our API

express is a web framework for Nodejs to build web apps
need not install http alag se because it is already installed

npm install -g nodemon (installs it globally because of -g)(to run a nodejs sever)

nodemon server.js - cmmnd to run prog

create room in views folder - room.ejs - it's a HTML file - ejs means embedded javascript means it has js inside html, nodejs can talk to our server kind of thing

npm install ejs - embedded js, will help us to get variables from backend to the frontend

We initialized our nodejs project and our first view.
Now we'll create a room id:

npm install uuid - unique id random id every sprcific room
import uuid library

got a uuid
ejs played its role and we got a unique id in the local host

created roomid
Now we'll add the ability to view our own video
made a script.js file in public folder

navigator.mediaDevices.getUserMedia accepts object, ours is video which we initially set as true

Now add ability to let others stream
use socket io and peer.js
socket io - for real time communication (RTC), it's a library uses web sockets, famous for async real time communication, diff from http as both server and client can communicate with each other(see diff. b/w http and socket io)
 
import socket.io

We'll use peer to peer to send streams b/w diff. people
npm install peer

began styling the application

took icons from "Font Awesome"

imported bootstrap

socket.emit 




Git commands:

git checkout -b new_branch_name
git add .
git commit -m "message"
git push --set-upstream origin new_branch_name






